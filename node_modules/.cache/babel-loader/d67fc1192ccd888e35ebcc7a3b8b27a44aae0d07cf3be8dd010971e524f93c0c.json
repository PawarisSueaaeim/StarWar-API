{"ast":null,"code":"var _jsxFileName = \"/Users/mungmee/Documents/Pleum/Training/React-JS/star-war-api/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovies from \"./components/AddMovies\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    fetchDummyMovies();\n  }, []);\n  const fetchDummyMovies = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get(\"https://react-http-starwar-ec2bd-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\");\n      const tranfromData = response.data.results.map(data => {\n        return {\n          id: data.episode_id,\n          title: data.title,\n          openingText: data.opening_crawl,\n          releaseDate: data.release_date\n        };\n      });\n      setMovies(tranfromData);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const addMoviesHandler = async movie => {\n    const response = await axios({\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: JSON.stringify(movies)\n    });\n    const data = await response;\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovies, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchDummyMovies,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 45\n      }, this), !isLoading && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Not Found Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 47\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RrB9iCR6GmbUvIaMrzhaucQ2OsA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","MoviesList","AddMovies","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","fetchDummyMovies","response","get","tranfromData","data","results","map","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","error","console","log","addMoviesHandler","movie","method","headers","JSON","stringify","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","_c","$RefreshReg$"],"sources":["/Users/mungmee/Documents/Pleum/Training/React-JS/star-war-api/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovies from \"./components/AddMovies\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetchDummyMovies();\n  },[]);\n\n  const fetchDummyMovies = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get(\"https://react-http-starwar-ec2bd-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\");\n      const tranfromData = response.data.results.map(data => {\n        return {\n          id: data.episode_id,\n          title: data.title,\n          openingText: data.opening_crawl,\n          releaseDate: data.release_date\n        }\n      });\n      setMovies(tranfromData);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n const addMoviesHandler = async (movie) => {\n  const response = await axios({\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    data: JSON.stringify(movies),\n  })\n  const data = await response;\n  console.log(data)\n }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovies/>\n      </section>\n      <section>\n        <button onClick={fetchDummyMovies}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && <p>Not Found Movies</p>}\n        {isLoading && <p>Loading...</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACda,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACFD,YAAY,CAAC,IAAI,CAAC;MAClB,MAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,gGAAgG,CAAC;MAClI,MAAMC,YAAY,GAAGF,QAAQ,CAACG,IAAI,CAACC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI;QACrD,OAAO;UACLG,EAAE,EAAEH,IAAI,CAACI,UAAU;UACnBC,KAAK,EAAEL,IAAI,CAACK,KAAK;UACjBC,WAAW,EAAEN,IAAI,CAACO,aAAa;UAC/BC,WAAW,EAAER,IAAI,CAACS;QACpB,CAAC;MACH,CAAC,CAAC;MACFhB,SAAS,CAACM,YAAY,CAAC;IACzB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,SAAS;MACRf,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAEF,MAAMkB,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACzC,MAAMjB,QAAQ,GAAG,MAAMZ,KAAK,CAAC;MAC3B8B,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDhB,IAAI,EAAEiB,IAAI,CAACC,SAAS,CAAC1B,MAAM;IAC7B,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMH,QAAQ;IAC3Bc,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC;EAClB,CAAC;EAEA,oBACEX,OAAA,CAACP,KAAK,CAACqC,QAAQ;IAAAC,QAAA,gBACb/B,OAAA;MAAA+B,QAAA,eACE/B,OAAA,CAACF,SAAS;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACVnC,OAAA;MAAA+B,QAAA,eACE/B,OAAA;QAAQoC,OAAO,EAAE7B,gBAAiB;QAAAwB,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACVnC,OAAA;MAAA+B,QAAA,GACG,CAAC1B,SAAS,IAAIF,MAAM,CAACkC,MAAM,GAAG,CAAC,iBAAIrC,OAAA,CAACH,UAAU;QAACM,MAAM,EAAEA;MAAO;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACjE,CAAC9B,SAAS,IAAIF,MAAM,CAACkC,MAAM,KAAK,CAAC,iBAAIrC,OAAA;QAAA+B,QAAA,EAAG;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC5D9B,SAAS,iBAAIL,OAAA;QAAA+B,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAACjC,EAAA,CAvDQD,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}